install.packages("dplyr")
install.packages("stringr")
install.packages("ggplot2")
install.packages("tidyr")
install.packages("janitor")
install.packages("gt)
install.packages("webshot2")
install.packages("officer")

library(dplyr)
library(stringr)
library(ggplot2)
library(tidyr)
library(janitor)
library(gt)
library(webshot2)
library(officer)

data2 <- read.csv("/Users/rashisingh/Thesis/Survey_1_Rashi.csv")

#Combining Columns of T0 & T1 

data2$concern_combined2 <- paste(data2$q41_t0, data2$q43_t1)
data2$ideal_children_society2 <- paste(data2$q50_t0_mod, data2$q52_mod_t1)
data2$ideal_children_personally2 <- paste(data2$q51_t0, data2$q53_mod_t1)
sum(is.na(data2$concern_combined2)) # 0
sum(is.na(data2$ideal_children_society2)) #0
sum(is.na(data2$ideal_children_personally2)) #0

typeof(data2$numeric_birth_year) #integer

range(data2$numeric_birth_year, na.rm = TRUE) # 1933 2008
data2$age <- 2025 - data2$numeric_birth_year
print(data2$age)

mean <- mean(data2$age, na.rm = TRUE)

# Choosing respondants who are in reproductive age (18-50)
reproductive_age_2 <- data2[data2$age >= 18 & data2$age <= 50, ]
reproductive_age_2$age

sum(is.na(reproductive_age_2$age)) #17

# dropping NA 
reproductive_age_2 <- data2[!is.na(data2$age) & data2$age >= 18 & data2$age <= 50, ]
sum(is.na(reproductive_age_2$age)) # 0

# Converting data to lowercase for easier pattern recognition
reproductive_age_2 <- reproductive_age_2 %>%
    mutate(concern_combined2 = str_to_lower(concern_combined2))

#Categorising data for plotting 

reproductive_age_2 <- reproductive_age_2 %>%
    mutate(concern_category = case_when(
        str_detect(concern_combined2, "not at all concerned|unconcerned") ~ "UNCONCERNED",
        str_detect(concern_combined2, "fairly concerned") ~ "CONCERNED",
        str_detect(concern_combined2, "very concerned") ~ "VERY CONCERNED",
        str_detect(concern_combined2, "extremely concerned") ~ "EXTREMELY CONCERNED",
        TRUE ~ NA_character_
    ))

sum(is.na(reproductive_age_2$concern_category)) # 0

 # Calculate the count and percentage for each category
category_counts <- reproductive_age_2 %>%
    count(concern_category) %>%
    mutate(percentage = n / sum(n) * 100)

print(category_counts)


# Did plot, code is in another file 


# For descriptive statistics

# Using these 
count(reproductive_age_2, concern_category)
count(reproductive_age_2, sex)
count(reproductive_age_2, numeric_number_children)
count(reproductive_age_2, education)
count(reproductive_age_2, employment_status)
count(reproductive_age_2, net_income_month)
count(reproductive_age_2, mar_status)
count(reproductive_age_2, age)


# FILTER DATASET AND KEEP ONLY MALE AND FEMALE VALUES
reproductive_age_cleaned <- reproductive_age_2 %>%
    filter(sex %in% c("Male", "Female"))

# USING THIS NOW TO CATEGORIZE NUMBER OF CHILDREN 

reproductive_age_cleaned <- reproductive_age_cleaned %>%
    mutate(children_group = case_when(
        numeric_number_children == 0 ~ "0",
        numeric_number_children == 1 ~ "1",
        numeric_number_children == 2 ~ "2",
        numeric_number_children >= 3 ~ "3 or more",
        is.na(numeric_number_children) ~ NA_character_
    ))

# RENAMING IT
reproductive_age_cleaned <- reproductive_age_cleaned %>%
  rename(present_children = children_group)

# Dropping NA

reproductive_age_cleaned <- reproductive_age_cleaned %>%
  filter(!is.na(present_children))

# CATEGORIZE EDUCATION 

reproductive_age_cleaned <- reproductive_age_cleaned %>%
  mutate(education_group = case_when(
    education %in% c("Bachelor's or Master's degree", "Ph.D.") ~ "Bachelor/Master/PhD",
    education %in% c("Elementary school diploma", "High school diploma", "Middle school diploma") ~ "Elementary to High School",
    education == "No educational qualification" ~ "No education",
    TRUE ~ NA_character_
  ))

# RENAMING 

reproductive_age_cleaned <- reproductive_age_cleaned %>%
  rename(educational_qualification = education_group)

count(reproductive_age_cleaned, educational_qualification)

# CATEGORIZNG EMPLOYMENT 
reproductive_age_cleaned <- reproductive_age_cleaned %>%
  mutate(employment_group = case_when(
    employment_status == "Worker" ~ "Working",
    employment_status == "Student" ~ "Student",
    employment_status %in% c("Unemployed", "Retired", "Inactive (Not working nor looking for work)") ~ "Unemployed/Inactive/Retired",
    TRUE ~ NA_character_
  ))

# RENAMING

reproductive_age_cleaned <- reproductive_age_cleaned %>%
  rename(employment_current = employment_group)

# CATEGORIZING MARITAL STATUS 

# First, standardize spelling & format inconsistencies
reproductive_age_cleaned <- reproductive_age_cleaned %>%
    mutate(mar_status = case_when(
        marital_status %in% c("De facto seperated", "Legally seperated", "Divorced") ~ "De facto or legally separated/Divorced",
        marital_status == "Widower" ~ "Widow",
        marital_status == "Single/Unmarried" ~ "Single/unmarried",
        TRUE ~ marital_status
    )) %>%
    mutate(marital_status_current = case_when(
        mar_status == "Married" ~ "Married",
        mar_status %in% c("Single/unmarried", "De facto or legally separated/Divorced", "Widow") ~ "Not married",
        TRUE ~ NA_character_
    ))

count(reproductive_age_cleaned, marital_status_current)

# CATEGORIZING INCOME 

reproductive_age_cleaned <- reproductive_age_cleaned %>%
  mutate(income_monthly = case_when(
    net_income_month %in% c("Less than 1,001 euros", "1,001 to 1,500 euros", "1,501 to 2,000 euros") ~ "Low income",
    net_income_month %in% c("2,001 to 3,000 euros", "3,001 to 5,000 euros") ~ "Middle income",
    net_income_month %in% c("5,001 to 10,000 euros", "More than 10.000 euros") ~ "High income",
    net_income_month == "Don't know" ~ NA_character_,
    TRUE ~ NA_character_
  ))

# DROPPING NA 

reproductive_age_cleaned <- reproductive_age_cleaned %>%
  filter(!is.na(income_monthly))

# CATEGORING AGE

reproductive_age_cleaned <- reproductive_age_cleaned %>%
  mutate(age_bracket = cut(age,
                           breaks = c(17, 24, 29, 34, 39, 44, 50),
                           labels = c("18–24", "25–29", "30–34", "35–39", "40–44", "45–50"),
                           right = TRUE))
count(reproductive_age_cleaned, age_bracket)

# CATEGORIZING CONCERN CATEGORY 

reproductive_age_cleaned <- reproductive_age_cleaned %>%
    mutate(climate_concern_group = case_when(
        concern_category == "UNCONCERNED" ~ "Low concern",
        concern_category %in% c("CONCERNED", "VERY CONCERNED") ~ "Medium concern",
        concern_category == "EXTREMELY CONCERNED" ~ "High concern",
        TRUE ~ NA_character_
    ))

count(reproductive_age_cleaned, climate_concern_group)

# RENAMING 
reproductive_age_cleaned <- reproductive_age_cleaned %>%
    rename(climate_concern = climate_concern_group)


# For table

library(dplyr)
library(gt)
library(tidyr)


format_percent <- function(x, digits = 1) {
    paste0(round(100 * x, digits), "%")
}

summarize_by_group <- function(data, variable, group_var = "climate_concern") {
    # Grouped counts
    grouped_counts <- data %>%
        mutate(!!sym(group_var) := factor(!!sym(group_var),
                                          levels = c("Low concern", "Medium concern", "High concern"))) %>%
        count(!!sym(group_var), !!sym(variable)) %>%
        group_by(!!sym(group_var)) %>%
        mutate(perc = n / sum(n),
               label = paste0(n, " (", format_percent(perc), ")")) %>%
        ungroup()
    
    # Total counts
    total_counts <- data %>%
        count(!!sym(variable)) %>%
        mutate(label = paste0(n, " (", format_percent(n / sum(n)), ")"),
               !!sym(group_var) := "Total")
    
    # Combine and pivot
    bind_rows(grouped_counts, total_counts) %>%
        select(!!sym(group_var), !!sym(variable), label) %>%
        pivot_wider(names_from = !!sym(group_var), values_from = label) %>%
        rename(Category = !!sym(variable))
}

# Building each section
age_tab <- summarize_by_group(reproductive_age_cleaned, "age_bracket") %>%
    mutate(section = "AGE")

# Add Age mean/sd as final row
age_stats <- reproductive_age_cleaned %>%
    group_by(climate_concern = factor(climate_concern, levels = c("Low concern", "Medium concern", "High concern"))) %>%
    summarise(mean = round(mean(age), 1), sd = round(sd(age), 1)) %>%
    mutate(label = paste0(mean, " (", sd, ")")) %>%
    select(climate_concern, label) %>%
    pivot_wider(names_from = climate_concern, values_from = label) %>%
    mutate(
        Category = "Mean (S.D.) of Age",
        Total = paste0(round(mean(reproductive_age_cleaned$age), 1), 
                       " (", round(sd(reproductive_age_cleaned$age), 1), ")"),
        section = "AGE"
    ) %>%
    select(Category, `Low concern`, `Medium concern`, `High concern`, Total, section)

children_tab <- summarize_by_group(reproductive_age_cleaned, "present_children") %>%
    mutate(section = "PRESENT CHILDREN")

edu_tab <- summarize_by_group(reproductive_age_cleaned, "educational_qualification") %>%
    mutate(section = "EDUCATION")

emp_tab <- summarize_by_group(reproductive_age_cleaned, "employment_current") %>%
    mutate(section = "EMPLOYMENT STATUS")

income_tab <- summarize_by_group(reproductive_age_cleaned, "income_monthly") %>%
    mutate(section = "INCOME")

marital_tab <- summarize_by_group(reproductive_age_cleaned, "marital_status_current") %>%
    mutate(section = "MARITAL STATUS")

sex_tab <- summarize_by_group(reproductive_age_cleaned, "sex") %>%
    mutate(section = "SEX")

# Combine all and reorder
final_table <- bind_rows(
    age_tab,
    age_stats,
    children_tab,
    edu_tab,
    emp_tab,
    income_tab,
    marital_tab,
    sex_tab
)

# Generate table using gt
table_1 <- final_table %>%
    arrange(factor(section, levels = c("AGE", "PRESENT CHILDREN", "EDUCATION",
                                       "EMPLOYMENT STATUS", "INCOME", "MARITAL STATUS", "SEX"))) %>%
    gt(groupname_col = "section") %>%
    tab_header(
        title = md("**Table 1. Characteristics of Reproductive-Aged Respondents (18–50) Grouped by Climate Change Concern**")
    ) %>%
    cols_label(
        Category = "Category",
        `Low concern` = "Low concern",
        `Medium concern` = "Medium concern",
        `High concern` = "High concern",
        Total = "Total"
    ) %>%
    sub_missing(missing_text = "")

table_1

# to save it 

library(webshot2)
gtsave(table_1, "table1.docx")
