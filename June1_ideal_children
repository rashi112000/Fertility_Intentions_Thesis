# --------------------------------
# LOADING REQUIRED LIBRARIES 
# --------------------------------
library(dplyr)     # Data wrangling
library(gt)        # Elegant table creation
library(stringr)   # String manipulation
library(tidyr)     # Data reshaping

# --------------------------------
# LOADING DATA
# --------------------------------

data2 <- read.csv("/Users/rashisingh/Thesis/Survey_1_Rashi.csv")

# --------------------------------
# COMBINING DATA of t0 and t1 
# --------------------------------
data2$concern_combined2 <- paste(data2$q41_t0, data2$q43_t1)
data2$ideal_children_society2 <- paste(data2$q50_t0_mod, data2$q52_mod_t1)
data2$ideal_children_personally2 <- paste(data2$q51_t0, data2$q53_mod_t1)

# --------------------------------
# CALCULATING AGE 
# --------------------------------
data2$age <- 2025 - data2$numeric_birth_year

# --------------------------------
# FILTERING RESPONDENTS OF REPRODUCTIVE AGE (18–50)
# --------------------------------
reproductive_age_2 <- data2 %>%
  filter(!is.na(age), age >= 18, age <= 50)

# --------------------------------
# STANDARDIZING CLIMATE CONCERN AND CREATING DIFFERENT CATEGORIES
# --------------------------------
# Convert concern text to lowercase
reproductive_age_2 <- reproductive_age_2 %>%
  mutate(concern_combined2 = str_to_lower(concern_combined2)) %>%
  mutate(concern_category = case_when(
    str_detect(concern_combined2, "not at all concerned|unconcerned") ~ "UNCONCERNED",
    str_detect(concern_combined2, "fairly concerned") ~ "CONCERNED",
    str_detect(concern_combined2, "very concerned") ~ "VERY CONCERNED",
    str_detect(concern_combined2, "extremely concerned") ~ "EXTREMELY CONCERNED",
    TRUE ~ NA_character_
  ))

# --------------------------------
# CLEANING & RECODING DEMOGRAPHIC VARIABLES
# --------------------------------
reproductive_age_cleaned <- reproductive_age_2 %>%
  # Keeping binary sex values
  filter(sex %in% c("Male", "Female")) %>%

  # Categorizing number of children
  mutate(present_children = case_when(
    numeric_number_children == 0 ~ "0",
    numeric_number_children == 1 ~ "1",
    numeric_number_children == 2 ~ "2",
    numeric_number_children >= 3 ~ "3 or more",
    TRUE ~ NA_character_
  )) %>%
  filter(!is.na(present_children)) %>%

  # Simplifying education levels
  mutate(educational_qualification = case_when(
    education %in% c("Bachelor's or Master's degree", "Ph.D.") ~ "Bachelor/Master/PhD",
    education %in% c("Elementary school diploma", "High school diploma", "Middle school diploma") ~ "Elementary to High School",
    education == "No educational qualification" ~ "No education",
    TRUE ~ NA_character_
  )) %>%

  # Recoding employment status
  mutate(employment_current = case_when(
    employment_status == "Worker" ~ "Working",
    employment_status == "Student" ~ "Student",
    employment_status %in% c("Unemployed", "Retired", "Inactive (Not working nor looking for work)") ~ "Unemployed/Inactive/Retired",
    TRUE ~ NA_character_
  )) %>%

  # Simplifying marital status 
  mutate(marital_status_current = case_when(
    marital_status == "Married" ~ "Married",
    marital_status %in% c("De facto seperated", "Legally seperated", "Divorced", "Widower", "Single/Unmarried") ~ "Not married",
    TRUE ~ NA_character_
  )) %>%

  # Grouping income brackets
  mutate(income_monthly = case_when(
    net_income_month %in% c("Less than 1,001 euros", "1,001 to 1,500 euros", "1,501 to 2,000 euros") ~ "Low income",
    net_income_month %in% c("2,001 to 3,000 euros", "3,001 to 5,000 euros") ~ "Middle income",
    net_income_month %in% c("5,001 to 10,000 euros", "More than 10.000 euros") ~ "High income",
    TRUE ~ NA_character_
  )) %>%
  filter(!is.na(income_monthly)) %>%

  # Creating age groups
  mutate(age_bracket = cut(age,
                           breaks = c(17, 24, 29, 34, 39, 44, 50),
                           labels = c("18–24", "25–29", "30–34", "35–39", "40–44", "45–50"),
                           right = TRUE)) %>%

  # Creating a 3-level climate concern variable
  mutate(climate_concern = case_when(
    concern_category == "UNCONCERNED" ~ "Low concern",
    concern_category %in% c("CONCERNED", "VERY CONCERNED") ~ "Medium concern",
    concern_category == "EXTREMELY CONCERNED" ~ "High concern",
    TRUE ~ NA_character_
  ))

# --------------------------------
# CLEAN IDEAL CHILDREN PERSONALLY RESPONSES
# --------------------------------

count(reproductive_age_cleaned, ideal_children_personally2)

# we saw 5 rows where the value is empty string 

# Save original values before cleaning 
reproductive_age_cleaned$original_ideal_children_personally2 <- reproductive_age_cleaned$ideal_children_personally2

# Replace empty or whitespace-only strings with NA
reproductive_age_cleaned$ideal_children_personally2[
    grepl("^\\s*$", reproductive_age_cleaned$ideal_children_personally2)
] <- NA

# See what got changed

changed_to_na <- reproductive_age_cleaned[
    is.na(reproductive_age_cleaned$ideal_children_personally2) & 
        !is.na(reproductive_age_cleaned$original_ideal_children_personally2), 
    "original_ideal_children_personally2"
]
print(changed_to_na) # we get " " " " " " " " " "

# FINALLY FINAL CATEGORISATION 

# Copy column to work on safely
x <- reproductive_age_cleaned$ideal_children_personally2

# First, attempt to convert clearly numeric responses to numbers
x_num <- suppressWarnings(as.numeric(as.character(x)))

# Create a new categorical variable
reproductive_age_cleaned$ideal_children_personally3 <- case_when(
  !is.na(x_num) & x_num <= 1        ~ "0-1",
  !is.na(x_num) & x_num > 1 & x_num <= 2   ~ "2",
  !is.na(x_num) & x_num > 2         ~ "3 or more",
  TRUE                              ~ "There is no ideal number / unclear"
)

table(reproductive_age_cleaned$ideal_children_personally3, useNA = "ifany")

count(reproductive_age_cleaned, ideal_children_personally3)

 # ideal_children_personally3         n
# 1                                0-1 640
# 2                                  2 869
# 3                          3 or more 359
# 4 There is no ideal number / unclear  37


# --------------------------------
# CATEGORISING IDEAL NUMBER OF CHILDREN SOCIETY
# --------------------------------


# IDEAL CHILDREN SOCIETY 
count(reproductive_age_cleaned, ideal_children_society2)

# Preserve the original
reproductive_age_cleaned$original_ideal_children_society2 <- reproductive_age_cleaned$ideal_children_society2

# Coerce whitespace-only values to NA
reproductive_age_cleaned$ideal_children_society2[
    grepl("^\\s*$", reproductive_age_cleaned$ideal_children_society2)
] <- NA

# See what got changed

changed_to_na2 <- reproductive_age_cleaned[
    is.na(reproductive_age_cleaned$ideal_children_society2) & 
        !is.na(reproductive_age_cleaned$original_ideal_children_society2), 
    "original_ideal_children_society2"
]
print(changed_to_na2)

# FINALLY FINAL CATEGORISATION 

# Copy column to work on safely
y <- reproductive_age_cleaned$ideal_children_society2

# First, attempt to convert clearly numeric responses to numbers
y_num <- suppressWarnings(as.numeric(as.character(y)))

# Create a new categorical variable
reproductive_age_cleaned$ideal_children_society3 <- case_when(
  !is.na(y_num) & y_num <= 1        ~ "0-1",
  !is.na(y_num) & y_num > 1 & y_num <= 2   ~ "2",
  !is.na(y_num) & y_num > 2         ~ "3 or more",
  TRUE                              ~ "There is no ideal number / unclear"
)

table(reproductive_age_cleaned$ideal_children_society3, useNA = "ifany")

count(reproductive_age_cleaned, ideal_children_society3)

# Ideal_children_society3    n
# 1                                0-1  327
# 2                                  2 1155
# 3                          3 or more  378
# 4 There is no ideal number / unclear   45


# AUTOMATING THE WHOLE PROCESS

# Function to clean and categorize ideal children variables
clean_ideal_children <- function(df, var_name) {
  original_var <- var_name
  original_var_orig <- paste0("original_", var_name)
  new_cat_var <- sub("2$", "3", var_name)
  
  # Save original column
  df[[original_var_orig]] <- df[[original_var]]
  
  # Replace empty strings or whitespace with NA
  df[[original_var]][grepl("^\\s*$", df[[original_var]])] <- NA
  
  # Convert to numeric safely
  num_vals <- suppressWarnings(as.numeric(as.character(df[[original_var]])))
  
  # Categorize responses
  df[[new_cat_var]] <- ifelse(
    !is.na(num_vals) & num_vals <= 1, "0-1",
    ifelse(!is.na(num_vals) & num_vals > 1 & num_vals <= 2, "2",
    ifelse(!is.na(num_vals) & num_vals > 2, "3 or more",
           "There is no ideal number / unclear"))
  )
  
  return(df)
}

# Assuming 'reproductive_age_cleaned' is already your data frame
reproductive_age_cleaned <- clean_ideal_children(reproductive_age_cleaned, "ideal_children_personally2")
reproductive_age_cleaned <- clean_ideal_children(reproductive_age_cleaned, "ideal_children_society2")

# Check tables for confirmation
table(reproductive_age_cleaned$ideal_children_personally3, useNA = "ifany")
table(reproductive_age_cleaned$ideal_children_society3, useNA = "ifany")



# RE-CHECKING VALUES USING FILTER  

# SEEING WHICH VALUES ARE INTO CATEGORY OF: 0-1

# FOR PERSONALLY
reproductive_age_cleaned %>%
  filter(ideal_children_personally3 == "0-1") %>%
  select(original_ideal_children_personally2, ideal_children_personally2, ideal_children_personally3)

# FOR SOCIETY

reproductive_age_cleaned %>%
  filter(ideal_children_society3 == "0-1") %>%
  select(original_ideal_children_society2, ideal_children_society2, ideal_children_society3)

# SEEING WHICH VALUES ARE INTO CATEGORY OF: 2

# FOR PERSONALLY
reproductive_age_cleaned %>%
  filter(ideal_children_personally3 == "2") %>%
  select(original_ideal_children_personally2, ideal_children_personally2, ideal_children_personally3)

# FOR SOCIETY

reproductive_age_cleaned %>%
  filter(ideal_children_society3 == "2") %>%
  select(original_ideal_children_society2, ideal_children_society2, ideal_children_society3)


# SEEING WHICH VALUES ARE INTO CATEGORY OF: 3 or more

# FOR PERSONALLY
reproductive_age_cleaned %>%
  filter(ideal_children_personally3 == "3 or more") %>%
  select(original_ideal_children_personally2, ideal_children_personally2, ideal_children_personally3)

# FOR SOCIETY

reproductive_age_cleaned %>%
  filter(ideal_children_society3 == "3 or more") %>%
  select(original_ideal_children_society2, ideal_children_society2, ideal_children_society3)

# SEEING WHICH VALUES ARE INTO CATEGORY OF: THERE IS NO IDEAL NUMBER 

# FOR PERSONALLY

reproductive_age_cleaned %>%
  filter(ideal_children_personally3 == "There is no ideal number / unclear") %>%
  select(original_ideal_children_personally2, ideal_children_personally2, ideal_children_personally3)

# FOR SOCIETY 

reproductive_age_cleaned %>%
  filter(ideal_children_society3 == "There is no ideal number / unclear") %>%
  select(original_ideal_children_society2, ideal_children_society2, ideal_children_society3)


