# --------------------------------
# LOAD REQUIRED LIBRARIES
# --------------------------------
library(dplyr)       # For data manipulation
library(stringr)     # For string processing
library(tidyr)       # For data reshaping
library(gt)          # For creating beautiful tables
library(webshot2)    # For saving tables as images or documents

# --------------------------------
# LOAD DATA
# --------------------------------
data2 <- read.csv("/Users/rashisingh/Thesis/Survey_1_Rashi.csv")

# --------------------------------
# COMBINE VARIABLES FROM TIMEPOINTS t0 and t1
# --------------------------------
data2 <- data2 %>%
  mutate(
    concern_combined2 = paste(q41_t0, q43_t1),
    ideal_children_society2 = paste(q50_t0_mod, q52_mod_t1),
    ideal_children_personally2 = paste(q51_t0, q53_mod_t1)
  )

# --------------------------------
# CALCULATE AGE
# --------------------------------
data2 <- data2 %>%
  mutate(age = 2025 - numeric_birth_year)

# --------------------------------
# FILTER RESPONDENTS IN REPRODUCTIVE AGE (18–50)
# --------------------------------
reproductive_age_2 <- data2 %>%
  filter(!is.na(age), age >= 18, age <= 50)

# --------------------------------
# STANDARDIZE CLIMATE CONCERN AND CREATE CATEGORIES
# --------------------------------
reproductive_age_2 <- reproductive_age_2 %>%
  mutate(
    concern_combined2 = str_to_lower(concern_combined2),
    concern_category = case_when(
      str_detect(concern_combined2, "not at all concerned|unconcerned") ~ "UNCONCERNED",
      str_detect(concern_combined2, "fairly concerned") ~ "CONCERNED",
      str_detect(concern_combined2, "very concerned") ~ "VERY CONCERNED",
      str_detect(concern_combined2, "extremely concerned") ~ "EXTREMELY CONCERNED",
      TRUE ~ NA_character_
    )
  )

# --------------------------------
# CLEAN AND RECODE DEMOGRAPHIC VARIABLES
# --------------------------------
reproductive_age_cleaned <- reproductive_age_2 %>%
  filter(sex %in% c("Male", "Female")) %>%
  mutate(
    present_children = case_when(
      numeric_number_children == 0 ~ "0",
      numeric_number_children == 1 ~ "1",
      numeric_number_children == 2 ~ "2",
      numeric_number_children >= 3 ~ "3 or more",
      TRUE ~ NA_character_
    )
  ) %>%
  filter(!is.na(present_children)) %>%
  mutate(
    educational_qualification = case_when(
      education %in% c("Bachelor's or Master's degree", "Ph.D.") ~ "Bachelor/Master/PhD",
      education %in% c("Elementary school diploma", "High school diploma", "Middle school diploma") ~ "Elementary to High School",
      education == "No educational qualification" ~ "No education",
      TRUE ~ NA_character_
    ),
    employment_current = case_when(
      employment_status == "Worker" ~ "Working",
      employment_status == "Student" ~ "Student",
      employment_status %in% c("Unemployed", "Retired", "Inactive (Not working nor looking for work)") ~ "Unemployed/Inactive/Retired",
      TRUE ~ NA_character_
    ),
    marital_status_current = case_when(
      marital_status == "Married" ~ "Married",
      marital_status %in% c("De facto seperated", "Legally seperated", "Divorced", "Widower", "Single/Unmarried") ~ "Not married",
      TRUE ~ NA_character_
    ),
    income_monthly = case_when(
      net_income_month %in% c("Less than 1,001 euros", "1,001 to 1,500 euros", "1,501 to 2,000 euros") ~ "Low income",
      net_income_month %in% c("2,001 to 3,000 euros", "3,001 to 5,000 euros") ~ "Middle income",
      net_income_month %in% c("5,001 to 10,000 euros", "More than 10.000 euros") ~ "High income",
      TRUE ~ NA_character_
    )
  ) %>%
  filter(!is.na(income_monthly)) %>%
  mutate(
    age_bracket = cut(age,
                      breaks = c(17, 24, 29, 34, 39, 44, 50),
                      labels = c("18–24", "25–29", "30–34", "35–39", "40–44", "45–50"),
                      right = TRUE),
    climate_concern = case_when(
      concern_category == "UNCONCERNED" ~ "Low concern",
      concern_category %in% c("CONCERNED", "VERY CONCERNED") ~ "Medium concern",
      concern_category == "EXTREMELY CONCERNED" ~ "High concern",
      TRUE ~ NA_character_
    )
  )

# --------------------------------
# CLEAN IDEAL CHILDREN VARIABLES FUNCTION
# --------------------------------
clean_ideal_children <- function(df, var_name) {
  original_var <- var_name
  original_var_orig <- paste0("original_", var_name)
  new_cat_var <- sub("2$", "3", var_name)  # New cleaned variable name

  df[[original_var_orig]] <- df[[original_var]]
  
  # Replace whitespace-only strings with NA
  df[[original_var]][grepl("^\\s*$", df[[original_var]])] <- NA
  
  num_vals <- suppressWarnings(as.numeric(as.character(df[[original_var]])))
  
  df[[new_cat_var]] <- case_when(
    is.na(num_vals) & !is.na(df[[original_var]]) ~ "There is no ideal number / unclear",
    is.na(num_vals) ~ NA_character_,
    num_vals == 0 ~ "0",
    num_vals == 1 ~ "1",
    num_vals == 2 ~ "2",
    num_vals == 3 ~ "3",
    num_vals == 4 ~ "4",
    num_vals >= 5 ~ "5 or more",
    TRUE ~ "There is no ideal number / unclear"
  )
  
  return(df)
}

# Apply cleaning function to both personal and societal ideal children variables
reproductive_age_cleaned <- clean_ideal_children(reproductive_age_cleaned, "ideal_children_personally2")
reproductive_age_cleaned <- clean_ideal_children(reproductive_age_cleaned, "ideal_children_society2")

# --------------------------------
# PREPARE DATA FOR IDEAL CHILDREN SUMMARY
# --------------------------------
summary_data <- reproductive_age_cleaned %>%
  filter(
    !ideal_children_personally3 %in% c("5 or more", "There is no ideal number / unclear", NA),
    !ideal_children_society3 %in% c("5 or more", "There is no ideal number / unclear", NA),
    !is.na(climate_concern)
  ) %>%
  mutate(
    ideal_children_personally_num = case_when(
      ideal_children_personally3 == "0" ~ 0,
      ideal_children_personally3 == "1" ~ 1,
      ideal_children_personally3 == "2" ~ 2,
      ideal_children_personally3 == "3" ~ 3,
      ideal_children_personally3 == "4" ~ 4,
      TRUE ~ NA_integer_
    ),
    ideal_children_society_num = case_when(
      ideal_children_society3 == "0" ~ 0,
      ideal_children_society3 == "1" ~ 1,
      ideal_children_society3 == "2" ~ 2,
      ideal_children_society3 == "3" ~ 3,
      ideal_children_society3 == "4" ~ 4,
      TRUE ~ NA_integer_
    )
  ) %>%
  filter(!is.na(ideal_children_personally_num), !is.na(ideal_children_society_num))

# --------------------------------
# HELPER FUNCTIONS FOR TABLES
# --------------------------------
format_percent <- function(x, digits = 1) {
  paste0(round(100 * x, digits), "%")
}

summarize_by_group_row_percent <- function(data, variable, group_var = "climate_concern") {
  counts <- data %>%
    count(!!sym(variable), !!sym(group_var)) %>%
    pivot_wider(names_from = !!sym(group_var), values_from = n, values_fill = 0) %>%
    mutate(
      Total = rowSums(select(., -!!sym(variable))),
      across(-c(!!sym(variable), Total), ~ paste0(.x, " (", format_percent(.x / Total), ")")),
      Total = paste0(Total, " (100%)")
    ) %>%
    rename(Category = !!sym(variable))
  
  return(counts)
}

# --------------------------------
# CREATE SUMMARY TABLES FOR EACH VARIABLE
# --------------------------------
sex_tab <- summarize_by_group_row_percent(reproductive_age_cleaned, "sex") %>% mutate(section = "SEX")
age_tab <- summarize_by_group_row_percent(reproductive_age_cleaned, "age_bracket") %>% mutate(section = "AGE")
children_tab <- summarize_by_group_row_percent(reproductive_age_cleaned, "present_children") %>% mutate(section = "PRESENT CHILDREN")
edu_tab <- summarize_by_group_row_percent(reproductive_age_cleaned, "educational_qualification") %>% mutate(section = "EDUCATION")

emp_tab <- reproductive_age_cleaned %>%
  mutate(employment_current = factor(employment_current, levels = c("Working", "Student", "Unemployed/Inactive/Retired"))) %>%
  summarize_by_group_row_percent("employment_current") %>%
  mutate(section = "EMPLOYMENT STATUS")

income_tab <- reproductive_age_cleaned %>%
  mutate(income_monthly = factor(income_monthly, levels = c("High income", "Middle income", "Low income"))) %>%
  summarize_by_group_row_percent("income_monthly") %>%
  mutate(section = "INCOME")

marital_tab <- summarize_by_group_row_percent(reproductive_age_cleaned, "marital_status_current") %>%
  mutate(section = "MARITAL STATUS")

# Mean and SD of Ideal Children variables by climate concern
ideal_children_summary <- tibble(
  Category = c(
    "Ideal number personally",
    "Ideal number for society"
  ),
  `Low concern` = c(
    paste0(
      round(mean(summary_data$ideal_children_personally_num[summary_data$climate_concern == "Low concern"]), 2), " (",
      round(sd(summary_data$ideal_children_personally_num[summary_data$climate_concern == "Low concern"]), 2), ")"
    ),
    paste0(
      round(mean(summary_data$ideal_children_society_num[summary_data$climate_concern == "Low concern"]), 2), " (",
      round(sd(summary_data$ideal_children_society_num[summary_data$climate_concern == "Low concern"]), 2), ")"
    )
  ),
  `Medium concern` = c(
    paste0(
      round(mean(summary_data$ideal_children_personally_num[summary_data$climate_concern == "Medium concern"]), 2), " (",
      round(sd(summary_data$ideal_children_personally_num[summary_data$climate_concern == "Medium concern"]), 2), ")"
    ),
    paste0(
      round(mean(summary_data$ideal_children_society_num[summary_data$climate_concern == "Medium concern"]), 2), " (",
      round(sd(summary_data$ideal_children_society_num[summary_data$climate_concern == "Medium concern"]), 2), ")"
    )
  ),
  `High concern` = c(
    paste0(
      round(mean(summary_data$ideal_children_personally_num[summary_data$climate_concern == "High concern"]), 2), " (",
      round(sd(summary_data$ideal_children_personally_num[summary_data$climate_concern == "High concern"]), 2), ")"
    ),
    paste0(
      round(mean(summary_data$ideal_children_society_num[summary_data$climate_concern == "High concern"]), 2), " (",
      round(sd(summary_data$ideal_children_society_num[summary_data$climate_concern == "High concern"]), 2), ")"
    )
  ),
  Total = c(
    paste0(
      round(mean(summary_data$ideal_children_personally_num), 2), " (",
      round(sd(summary_data$ideal_children_personally_num), 2), ")"
    ),
    paste0(
      round(mean(summary_data$ideal_children_society_num), 2), " (",
      round(sd(summary_data$ideal_children_society_num), 2), ")"
    )
  ),
  section = "IDEAL NUMBER OF CHILDREN - Mean (SD)"
)

# --------------------------------
# COMBINE ALL TABLES INTO FINAL TABLE
# --------------------------------
final_table <- bind_rows(
  sex_tab, age_tab, children_tab, edu_tab,
  emp_tab, income_tab, marital_tab, ideal_children_summary
)

# Calculate last row index for styling
last_row <- nrow(final_table)

# --------------------------------
# CREATE GT TABLE AND STYLE
# --------------------------------
table_1 <- final_table %>%
  arrange(factor(section, levels = c(
    "SEX", "AGE", "PRESENT CHILDREN", "EDUCATION",
    "EMPLOYMENT STATUS", "INCOME", "MARITAL STATUS", "IDEAL NUMBER OF CHILDREN - Mean (SD)"
  ))) %>%
  gt(groupname_col = "section") %>%
  tab_header(
    title = md("**Table 5. Characteristics of Reproductive-Aged Respondents (18–50) Grouped by Climate Change Concern**")
  ) %>%
  cols_label(
    Category = "Category",
    `Low concern` = "Low concern",
    `Medium concern` = "Medium concern",
    `High concern` = "High concern",
    Total = "Total"
  ) %>%
  sub_missing(missing_text = "") %>%
  tab_options(
    table.font.names = c("Times New Roman", "serif"),
    table.font.size = 12,
    heading.title.font.size = 14,
    heading.title.font.weight = "bold",
    row_group.font.weight = "bold",
    column_labels.font.weight = "bold",
    column_labels.font.size = 12,
    data_row.padding = px(4),
    table.border.top.color = "black",
    table.border.bottom.color = "black",
    row_group.border.top.color = "gray80",
    row_group.border.bottom.color = "gray80",
    row.striping.include_table_body = TRUE,
    row.striping.background_color = "gray95"
  ) %>%
  tab_style(
    style = cell_borders(
      sides = "bottom",
      color = "black",
      weight = px(2)
    ),
    locations = cells_body(
      rows = last_row
    )
  )

# --------------------------------
# SHOW TABLE AND SAVE
# --------------------------------
table_1

gtsave(table_1, "Table 5.html")
