library(dplyr)
library(stringr)
library(ggplot2)

getwd()
setwd("/Users/rashisingh/Thesis")
data <- read.csv("/Users/rashisingh/Thesis/Survey_1_cleaned.csv")

#Combining Columns of T0 & T1 

data$Concern_Combined <- paste(data$Q41_T0, data$Q43_T1)
data$Ideal_Children_Society <- paste(data$Q50_T0_MOD, data$Q53_MOD_T1) 
data$Ideal_Children_Personally <- paste(data$Q51_T0, data$Q53_MOD_T1)
View(data)

sum(is.na(data$Concern_Combined))
sum(is.na(data$Ideal_Children_Society))
sum(is.na(data$Ideal_Children_Personally))

# all are zero 

typeof(data$birth_year) # Character 

# Converting Character to Numerical 
data <- data %>%
    mutate(birth_year = as.numeric(birth_year))

# Checking NA's
sum(is.na(data$birth_year)) # 3

# Checking why NA
data %>%
    filter(is.na(birth_year)) %>%
    select(birth_year)

# Removing NA
data <- data[!is.na(data$birth_year), ]

# Checking NA
sum(is.na(data$birth_year)) # 0


# Extract 4-digit numbers that start with 18, 19, or 20
data$birth_year <- as.numeric(stringr::str_extract(as.character(data$birth_year), "\\b(18|19|20)\\d{2}\\b"))

range(data$birth_year, na.rm = TRUE)

#  Keep only valid birth years (between 1894 and 2024)
data <- data[data$birth_year >= 1894 & data$birth_year <= 2024, ]

# Calculating age 
data$age <- 2025 - data$birth_year

# GETTING 12 NA STILL SO NOW 

library(dplyr)
library(stringr)

# Step 1: Extract valid 4-digit years
data$birth_year <- as.numeric(str_extract(as.character(data$birth_year), "\\b(18|19|20)\\d{2}\\b"))

# Step 2: Remove NAs (i.e., invalid or unmatched strings)
data <- data[!is.na(data$birth_year), ]

# Step 3: Keep realistic range only
data <- data[data$birth_year >= 1894 & data$birth_year <= 2024, ]

# Step 4: Calculate age
data$age <- 2025 - data$birth_year

# Step 5: Check
sum(is.na(data$age))

# NOW IT IS 0 

# Calculating mean age 
mean(data$age, na.rm = TRUE)
mean_age <- mean(data$age, na.rm = TRUE)

# Only reproductive age respondants (18-50)
Reproductive_age <- data[data$age >= 18 & data$age <= 50, ]

# Converting data to lowercase for easier pattern recognition
Reproductive_age <- Reproductive_age %>%
    mutate(Concern_Combined_clean = str_to_lower(Concern_Combined))


sum(is.na(Reproductive_age$Concern_Combined_clean))

#Categorising data for plotting 

Reproductive_age <- Reproductive_age %>%
    mutate(Concern_Category = case_when(
        str_detect(Concern_Combined_clean, "not at all concerned|unconcerned") ~ "UNCONCERNED",
        str_detect(Concern_Combined_clean, "fairly concerned") ~ "CONCERNED",
        str_detect(Concern_Combined_clean, "very concerned") ~ "VERY CONCERNED",
        str_detect(Concern_Combined_clean, "extremely concerned") ~ "EXTREMELY CONCERNED",
        TRUE ~ NA_character_
    ))

# Checking NA after categorization step
sum(is.na(Reproductive_age$Concern_Category))

# plot with percentage
# Calculate the count and percentage for each category
category_counts <- Reproductive_age %>%
    count(Concern_Category) %>%
    mutate(percentage = n / sum(n) * 100)

print(category_counts)

# Ensure the categories are in the desired order
category_counts$Concern_Category <- factor(category_counts$Concern_Category,
    levels = c("UNCONCERNED", "CONCERNED", "VERY CONCERNED", "EXTREMELY CONCERNED")
)

# Now plot
library(ggplot2)

ggplot(category_counts, aes(x = Concern_Category, y = percentage, fill = Concern_Category)) +
    geom_bar(stat = "identity", width = 0.6, color = "white") +
    geom_text(aes(label = paste0(round(percentage, 1), "%")),
              vjust = -0.3, size = 4.5, fontface = "bold") +
    scale_fill_brewer(palette = "Pastel1") +
    labs(
        title = "Distribution of Climate Change Concern Among Respondents",
        x = "Concern Category",
        y = "Percentage of Respondents"
    ) +
    theme_minimal(base_size = 13) +
    theme(
        plot.title = element_text(hjust = 0.5, face = "bold"),
        axis.text.x = element_text(angle = 20, vjust = 1, hjust = 1),
        legend.position = "none"
    ) +
    ylim(0, max(category_counts$percentage) + 10)


# PLOTTING THIS HORIZONTALLY!!!
# Ensure the categories are ordered as desired
category_counts$Concern_Category <- factor(category_counts$Concern_Category,
    levels = c("UNCONCERNED", "CONCERNED", "VERY CONCERNED", "EXTREMELY CONCERNED")
)

# Load ggplot2 if not already loaded
library(ggplot2)

ggplot(category_counts, aes(x = Concern_Category, y = percentage, fill = Concern_Category)) +
    geom_bar(stat = "identity", width = 0.6, color = "white") +
    geom_text(aes(label = paste0(round(percentage, 1), "%")),
              hjust = -0.1, size = 4.5, fontface = "bold") +  # hjust instead of vjust
    scale_fill_brewer(palette = "Pastel1") +
    labs(
        title = "Distribution of Climate Change Concern Among Respondents",
        x = "Concern Category",
        y = "Percentage of Respondents"
    ) +
    theme_minimal(base_size = 13) +
    theme(
        plot.title = element_text(hjust = 0.5, face = "bold"),
        axis.text.x = element_text(size = 11),
        axis.text.y = element_text(size = 11),
        legend.position = "none"
    ) +
    coord_flip() +  # This flips the axes
    ylim(0, max(category_counts$percentage) + 10)  # Still valid for flipped charts




















    
