# Thesis_Fertility_Intentions

# Code for the new project created

library(dplyr)
library(stringr)
library(ggplot2)

getwd()
list.files()
setwd("/Users/rashisingh/Thesis_Fertility_Intentions")
data <- read.csv("/Users/rashisingh/Thesis_Fertility_Intentions/Survey_1_cleaned.csv")

#Visualizing Columns for reference
ClimateConcern <- data[, c("Q41_T0", "Q43_T1")]
IdealChildren_Society <- data[, c("Q50_T0_MOD", "Q52_MOD_T1")]
IdealChildren_Personally <- data[, c("Q51_T0", "Q53_MOD_T1")]

#Combining Columns of T0 & T1 

data$Concern_Combined <- paste(data$Q41_T0, data$Q43_T1)
data$Ideal_Children_Society <- paste(data$Q50_T0_MOD, data$Q53_MOD_T1) 
data$Ideal_Children_Personally <- paste(data$Q51_T0, data$Q53_MOD_T1)
View(data)

 # Converting data to lowercase for easier pattern recognition
data$Concern_Combined_clean <- tolower(data$Concern_Combined)
View(data)


# Calculating the age of people 

typeof(data$birth_year)

# Converting character to numerical 
data$birth_year <- as.numeric(data$birth_year)


# checking id NA were introduced 
sum(is.na(data$birth_year))

# Check which values were not successfully converted to numeric
non_numeric_values <- data$birth_year[is.na(as.numeric(data$birth_year))]
print(non_numeric_values)


# Convert the column to numeric - data has new column as birth_year_numeric

data$birth_year_numeric <- as.numeric(as.character(data$birth_year))


# checking if NA still exist 
sum(is.na(data$birth_year_numeric))


# removing NA 
data <- data[!is.na(data$birth_year_numeric), ]

# Checking if NA is removed 
sum(is.na(data$birth_year_numeric))

# Extract 4-digit numbers that start with 18, 19, or 20
data$birth_year_numeric <- as.numeric(stringr::str_extract(as.character(data$birth_year), "\\b(18|19|20)\\d{2}\\b"))

# \\b	A word boundary — ensures the match starts or ends at the edge of a word (so it doesn’t match parts of longer numbers or words).
#`(18	19
#\\d{2}	Match exactly two digits after the first two, so the total is 4 digits. (\\d means any digit, {2} means exactly 2 repetitions.)
#\\b	Another word boundary, to make sure the match ends cleanly (e.g., won't match "19995").

range(data$birth_year_numeric, na.rm = TRUE)


#  Keep only valid birth years (between 1920 and 2025)
data <- data[data$birth_year_numeric >= 1894 & data$birth_year_numeric <= 2024, ]

# recalculating age 
data$age <- 2025 - data$birth_year_numeric

mean(data$age, na.rm = TRUE)
mean_age <- mean(data$age, na.rm = TRUE)


# Only reproductive age respondants (18-50)
Reproductive_age <- data[data$age >= 18 & data$age <= 50, ]


#Categorising data for plotting 

Reproductive_age$Concern_Category <- case_when(
    str_detect(Reproductive_age$Concern_Combined_clean, "not at all concerned|unconcerned") ~ "UNCONCERNED",
    str_detect(Reproductive_age$Concern_Combined_clean, "fairly concerned") ~ "CONCERNED",
    str_detect(Reproductive_age$Concern_Combined_clean, "very concerned") ~ "VERY CONCERNED",
    str_detect(Reproductive_age$Concern_Combined_clean, "extremely concerned") ~ "EXTREMELY CONCERNED",
    TRUE ~ NA_character_155
)

 # Checking NA after categorization step
sum(is.na(Reproductive_age$Concern_Category))  #12


# plot with percentage
# Calculate the count and percentage for each category
category_counts <- Reproductive_age %>%
    count(Concern_Category) %>%
    mutate(percentage = n / sum(n) * 100)

print(category_counts)





