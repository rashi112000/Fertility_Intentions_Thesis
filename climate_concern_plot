# Thesis_Fertility_Intentions

# Code for the new project created

library(dplyr)
library(stringr)
library(ggplot2)

getwd()
list.files()
setwd("/Users/rashisingh/Thesis_Fertility_Intentions")
data <- read.csv("/Users/rashisingh/Thesis_Fertility_Intentions/Survey_1_cleaned.csv")

#Visualizing Columns that I need to merge for reference
ClimateConcern <- data[, c("Q41_T0", "Q43_T1")]
IdealChildren_Society <- data[, c("Q50_T0_MOD", "Q52_MOD_T1")]
IdealChildren_Personally <- data[, c("Q51_T0", "Q53_MOD_T1")]

#Combining Columns of T0 & T1 

data$Concern_Combined <- paste(data$Q41_T0, data$Q43_T1)
data$Ideal_Children_Society <- paste(data$Q50_T0_MOD, data$Q53_MOD_T1) 
## mistake!!! RECODE THIS: data$Ideal_Children_Personally <- paste(data$Q51_T0, data$Q53_MOD_T1)
View(data)

 # Converting data to lowercase for easier pattern recognition
data$Concern_Combined_clean <- tolower(data$Concern_Combined)
View(data)

sum(is.na(data$Concern_Combined))
sum(is.na(data$Ideal_Children_Society))
sum(is.na(data$Ideal_Children_Personally))

# Calculating the age of people 

typeof(data$birth_year) # Character

# Convert the column to numerical  

data$birth_year_numeric <- as.numeric(as.character(data$birth_year))

# checking if NA exists 
sum(is.na(data$birth_year_numeric)) #3

# Checking to see why NA is introduced 
data %>%
    filter(is.na(birth_year_numeric)) %>%
    select(birth_year)
# Found 3 entries: Giovanni, Marco,  2²2

# removing NA 
data <- data[!is.na(data$birth_year_numeric), ]

# Checking if NA is removed 
sum(is.na(data$birth_year_numeric)) #0

# Extract 4-digit numbers that start with 18, 19, or 20
data$birth_year_numeric <- as.numeric(stringr::str_extract(as.character(data$birth_year), "\\b(18|19|20)\\d{2}\\b"))

# Explaination of code
# \\b	A word boundary — ensures the match starts or ends at the edge of a word (so it doesn’t match parts of longer numbers or words).
#`(18	19
#\\d{2}	Match exactly two digits after the first two, so the total is 4 digits. (\\d means any digit, {2} means exactly 2 repetitions.)
#\\b	Another word boundary, to make sure the match ends cleanly (e.g., won't match "19995").

range(data$birth_year_numeric, na.rm = TRUE)

#  Keep only valid birth years (between 1894 and 2024)
data <- data[data$birth_year_numeric >= 1894 & data$birth_year_numeric <= 2024, ]

# Calculating age 
data$age <- 2025 - data$birth_year_numeric

mean(data$age, na.rm = TRUE)
mean_age <- mean(data$age, na.rm = TRUE)


# Only reproductive age respondants (18-50)
Reproductive_age <- data[data$age >= 18 & data$age <= 50, ]

# Converting data to lowercase for easier pattern recognition
Reproductive_age <- Reproductive_age %>%
    mutate(Concern_Combined_clean = str_to_lower(Concern_Combined))
# Thus, new column Concern_Combined_clean is created 

#Categorising data for plotting 

Reproductive_age <- Reproductive_age %>%
    mutate(Concern_Category = case_when(
        str_detect(Concern_Combined_clean, "not at all concerned|unconcerned") ~ "UNCONCERNED",
        str_detect(Concern_Combined_clean, "fairly concerned") ~ "CONCERNED",
        str_detect(Concern_Combined_clean, "very concerned") ~ "VERY CONCERNED",
        str_detect(Concern_Combined_clean, "extremely concerned") ~ "EXTREMELY CONCERNED",
        TRUE ~ NA_character_
    ))


 # Checking NA after categorization step
sum(is.na(Reproductive_age$Concern_Category))  #12


# plot with percentage
# Calculate the count and percentage for each category
category_counts <- Reproductive_age %>%
    count(Concern_Category) %>%
    mutate(percentage = n / sum(n) * 100)

print(category_counts)

ggplot(category_counts_clean, aes(x = Concern_Category, y = percentage, fill = Concern_Category)) +
    geom_bar(stat = "identity", width = 0.4) +
    geom_text(aes(label = paste0(round(percentage, 1), "%")), hjust = -0.1, size = 3.5, color = "black") +
    scale_fill_manual(values = c(
        "UNCONCERNED" = "#d9d9d9",
        "CONCERNED" = "#bdbdbd",
        "VERY CONCERNED" = "#969696",
        "EXTREMELY CONCERNED" = "#636363"
    )) +
    labs(
        title = "Climate Concern Among Reproductive-Age Respondents",
        x = NULL,
        y = "Percentage of Respondents"
    ) +
    coord_flip() +
    theme_minimal(base_size = 11) +
    theme(
        legend.position = "none",
        axis.text.y = element_text(size = 9, color = "black"),
        axis.text.x = element_text(size = 9, color = "black"),
        plot.title = element_text(face = "bold", hjust = 0.5, color = "black"),
        plot.caption = element_text(size = 9, hjust = 0, margin = margin(t = 10), color = "black"),
        panel.grid.major = element_blank(),  # <---- removes major grid lines
        panel.grid.minor = element_blank(),  # <---- removes minor grid lines
        plot.margin = margin(10, 10, 10, 10)
    )





